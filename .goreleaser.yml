before:
  hooks:
    - go mod download
    - go generate ./...

builds:
- id: xbvr-mac
  binary: xbvr
#  main: pkg/tray/main.go
  flags:
    - -tags=json1
  ldflags:
    - -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}}
  env:
    - CGO_ENABLED=1
    - CC=o64-clang
    - CXX=o64-clang++
  goos:
    - darwin
  goarch:
    - amd64
#  hooks:
#    post: ./appify.sh -s ./dist/xbvr-mac_darwin_amd64/XBVR.app/Contents/MacOS/XBVR -i ./ui/public/icons/xbvr-mac.icns -n XBVR

- id: xbvr-windows
  binary: xbvr
  main: pkg/tray/main.go
  flags:
    - -tags=json1
  ldflags:
    - -s -w -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.Date}} -H windowsgui
  env:
    - CGO_ENABLED=1
    - CC=x86_64-w64-mingw32-gcc
    - CXX=x86_64-w64-mingw32-g++
  goos:
    - windows
  goarch:
    - amd64

- id: xbvr-linux-amd64
  binary: xbvr
  flags:
    - -tags=json1
  env:
    - CGO_ENABLED=1
  goos:
    - linux
  goarch:
    - amd64

- id: xbvr-linux-arm64
  binary: xbvr
  flags:
    - -tags=json1
  env:
    - CGO_ENABLED=1
    - CC=aarch64-linux-gnu-gcc
  goos:
    - linux
  goarch:
    - arm64

archives:
- id: archive-linux
  builds:
    - xbvr-linux-amd64
    - xbvr-linux-arm64
  replacements:
    linux: Linux
    windows: Windows
    amd64: x86_64
- id: archive-win
  builds:
    - xbvr-windows
  format: zip
  replacements:
    windows: Windows
- id: archive-mac
  builds:
    - xbvr-mac
  format: zip
  replacements:
    darwin: macOS
#  files:
#    - XBVR.app/Contents/Resources/XBVR.icns
#    - XBVR.app/Contents/Info.plist

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

release:
  disable: false
  github:
    owner: xbapps
    name: xbvr
